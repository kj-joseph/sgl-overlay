@use "sass:math";
@use "variables";

$hexLogoBorderWidth: 0%; // can add "border" around image in hex, but decided not to for now

@mixin placeholderTeamlogo($bgColor) {
	background-image:
		linear-gradient($bgColor, $bgColor),
		linear-gradient(#000000, #000000),
		url("/images/logos/sgl-logo.png");
	background-size:
		100% 100%,
		100% 100%,
		100% 100%,
		100% 100%;
	background-repeat:
		no-repeat,
		no-repeat,
		no-repeat,
		no-repeat;
	background-blend-mode:
		normal,
		color,
		normal;
}

@mixin smallHeader() {
	position: absolute;
	top: 25px;
	width: variables.$windowWidth;
	height: variables.$pregameLeagueLogoHeightSmall;
	background-image: linear-gradient(to bottom,
		variables.$backgroundTransparent 0,
		variables.$backgroundTransparent 25%,
		variables.$sglRed 25%,
		variables.$sglRed 28.29%,
		#1f1f1f 28.29%,
		#1f1f1f 71.71%,
		variables.$sglRed 71.71%,
		variables.$sglRed 75%,
		variables.$backgroundTransparent 75%,
		variables.$backgroundTransparent 100%
	),
	linear-gradient(to bottom,
		variables.$backgroundTransparent 0,
		variables.$backgroundTransparent 25%,
		variables.$sglBlue 25%,
		variables.$sglBlue 28.29%,
		#1f1f1f 28.29%,
		#1f1f1f 71.71%,
		variables.$sglBlue 71.71%,
		variables.$sglBlue 75%,
		variables.$backgroundTransparent 75%,
		variables.$backgroundTransparent 100%
	);
	background-size:
		50% 100%,
		50% 100%;
	background-position:
		top left,
		top right;
	background-repeat:
		no-repeat,
		no-repeat;

	.leagueLogo {
		position: absolute;
		left: 50%;
		top: 0;
		width: calc(math.div(variables.$pregameLeagueLogoHeightSmall, variables.$hexRatio));
		height: variables.$pregameLeagueLogoHeightSmall;
		transform: translateX(-50%);

		img {
			width: 100%;
			height: 100%;
			object-fit: contain;
			object-position: 50% 50%;
		}
	}

	.header {
		position: absolute;
		font-size: 30px;
		top: 50%;
		transform: translateY(-50%);
		color: variables.$textColor;
		font-family: var(--fontHexagle);
		font-weight: bold;
		font-style: normal;
		text-transform: uppercase;
		letter-spacing: .1em;
		background: none;
		margin: 0;
		padding: 0;

		&.header0 {
			left: 0;
			width: calc(50% - math.div(variables.$pregameLeagueLogoHeightSmall, variables.$hexRatio) * .5 - variables.$borderSize - variables.$borderSize);
			text-align: right;
		}

		&.header1 {
			right: 0;
			width: calc(50% - math.div(variables.$pregameLeagueLogoHeightSmall, variables.$hexRatio) * .5 - variables.$borderSize - variables.$borderSize);
			text-align: left;
		}

		@include textPipes;

	}

}

@mixin teamLogoHex($logoWidth, $maskSize: cover) {
	width: $logoWidth;
	height: calc($logoWidth * variables.$hexRatio);
	background: variables.$backgroundColor;
	mask-image: url("/images/themes/sgl/hex-mask.png");
	mask-size: $maskSize;
	mask-repeat: no-repeat;
	mask-position: center center;

	img {
		width: calc(100% - $hexLogoBorderWidth * 2);
		height: calc(100% - $hexLogoBorderWidth * 2);
		margin: $hexLogoBorderWidth;
		mask-image: url("/images/themes/sgl/hex-mask.png");
		mask-size: cover;
		object-fit: cover;
		object-position: 50% 50%;
		overflow-clip-margin: unset;
	}

}

@mixin textPipes {

	&.pipes {

		span {
			&:not(:last-child) {
				margin-right: variables.$spanSpacing;

				&:after {
					content: "|";
					font-family: var(--fontSans);
					font-size: 87%;
					color: variables.$secondaryTextColor;
					margin-left: variables.$spanSpacing;
				}
			}

		}

	}

}
